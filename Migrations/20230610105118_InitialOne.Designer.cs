// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PsychoMedikAPI.Data;

#nullable disable

namespace PsychoMedikAPI.Migrations
{
    [DbContext(typeof(PsychoMedikAPIContext))]
    [Migration("20230610105118_InitialOne")]
    partial class InitialOne
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChorobaObjaw", b =>
                {
                    b.Property<int>("ChorobyId")
                        .HasColumnType("int");

                    b.Property<int>("ObjawyId")
                        .HasColumnType("int");

                    b.HasKey("ChorobyId", "ObjawyId");

                    b.HasIndex("ObjawyId");

                    b.ToTable("ChorobaObjaw");
                });

            modelBuilder.Entity("ObjawPacjent", b =>
                {
                    b.Property<int>("ObjawyId")
                        .HasColumnType("int");

                    b.Property<int>("PacjenciId")
                        .HasColumnType("int");

                    b.HasKey("ObjawyId", "PacjenciId");

                    b.HasIndex("PacjenciId");

                    b.ToTable("ObjawPacjent");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Choroba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Choroba");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Harmonogram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<int>("DzienRoku")
                        .HasColumnType("int");

                    b.Property<int>("GodzinaRozpoczecia")
                        .HasColumnType("int");

                    b.Property<int>("GodzinaZakonczenia")
                        .HasColumnType("int");

                    b.Property<int?>("IdPracownika")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPracownika");

                    b.ToTable("Harmonogram");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.HistoriaChoroby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataWyleczenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataZdiagnozowania")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdChoroby")
                        .HasColumnType("int");

                    b.Property<int?>("IdPacjenta")
                        .HasColumnType("int");

                    b.Property<int?>("IdPracownika")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdChoroby");

                    b.HasIndex("IdPacjenta");

                    b.HasIndex("IdPracownika");

                    b.ToTable("HistoriaChoroby");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Objaw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Objaw");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pacjent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdPracownika")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Plec")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdPracownika");

                    b.ToTable("Pacjent");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pokoj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokoj");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRezygnacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataZatrudnienia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdStanowiska")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Plec")
                        .HasColumnType("bit");

                    b.Property<string>("StanCywilny")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdStanowiska");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Stanowisko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stanowisko");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Wizyta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CzyAktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataModyfikacji")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataWizyty")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdLekarza")
                        .HasColumnType("int");

                    b.Property<int?>("IdPacjenta")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PokojId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLekarza");

                    b.HasIndex("IdPacjenta");

                    b.HasIndex("PokojId");

                    b.ToTable("Wizyta");
                });

            modelBuilder.Entity("ChorobaObjaw", b =>
                {
                    b.HasOne("PsychoMedikAPI.Models.Choroba", null)
                        .WithMany()
                        .HasForeignKey("ChorobyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsychoMedikAPI.Models.Objaw", null)
                        .WithMany()
                        .HasForeignKey("ObjawyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObjawPacjent", b =>
                {
                    b.HasOne("PsychoMedikAPI.Models.Objaw", null)
                        .WithMany()
                        .HasForeignKey("ObjawyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsychoMedikAPI.Models.Pacjent", null)
                        .WithMany()
                        .HasForeignKey("PacjenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Harmonogram", b =>
                {
                    b.HasOne("PsychoMedikAPI.Models.Pracownik", "Pracownik")
                        .WithMany("Harmonogram")
                        .HasForeignKey("IdPracownika");

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.HistoriaChoroby", b =>
                {
                    b.HasOne("PsychoMedikAPI.Models.Choroba", "Choroba")
                        .WithMany("HistoriaChorob")
                        .HasForeignKey("IdChoroby");

                    b.HasOne("PsychoMedikAPI.Models.Pacjent", "Pacjent")
                        .WithMany("HistoriaChoroby")
                        .HasForeignKey("IdPacjenta");

                    b.HasOne("PsychoMedikAPI.Models.Pracownik", "Pracownik")
                        .WithMany()
                        .HasForeignKey("IdPracownika");

                    b.Navigation("Choroba");

                    b.Navigation("Pacjent");

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pacjent", b =>
                {
                    b.HasOne("PsychoMedikAPI.Models.Pracownik", "Pracownik")
                        .WithMany("Pacjenci")
                        .HasForeignKey("IdPracownika");

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pracownik", b =>
                {
                    b.HasOne("PsychoMedikAPI.Models.Stanowisko", "Stanowisko")
                        .WithMany("Pracownicy")
                        .HasForeignKey("IdStanowiska");

                    b.Navigation("Stanowisko");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Wizyta", b =>
                {
                    b.HasOne("PsychoMedikAPI.Models.Pracownik", "Pracownik")
                        .WithMany()
                        .HasForeignKey("IdLekarza");

                    b.HasOne("PsychoMedikAPI.Models.Pacjent", "Pacjent")
                        .WithMany()
                        .HasForeignKey("IdPacjenta");

                    b.HasOne("PsychoMedikAPI.Models.Pokoj", null)
                        .WithMany("Wizyty")
                        .HasForeignKey("PokojId");

                    b.Navigation("Pacjent");

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Choroba", b =>
                {
                    b.Navigation("HistoriaChorob");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pacjent", b =>
                {
                    b.Navigation("HistoriaChoroby");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pokoj", b =>
                {
                    b.Navigation("Wizyty");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Pracownik", b =>
                {
                    b.Navigation("Harmonogram");

                    b.Navigation("Pacjenci");
                });

            modelBuilder.Entity("PsychoMedikAPI.Models.Stanowisko", b =>
                {
                    b.Navigation("Pracownicy");
                });
#pragma warning restore 612, 618
        }
    }
}
